name: Build Rime Configs
on:
  push:
    branches:
      - master
    tags:
      - 'v*'

jobs:
  prepare-schemas:
    name: Prepare Schemas 🖨️
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Clear Cache ❌
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete ${{ runner.os }}-schemas --confirm
        continue-on-error: true

      - name: Install Dependencies ⚙️
        run: sudo apt-get install -y opencc

      - name: Fetch Schemas 📥
        run: |
          bash fetch.sh

      - name: Cache Schemas 💾
        uses: actions/cache/save@v3
        if: always()
        with:
          path: schemas
          key: ${{ runner.os }}-schemas

  build-package:
    strategy:
      matrix:
        target: [ weasel, hamster, irime ]
        include:
          - { target: weasel, name: Weasel, emoji: 🦡 }
          - { target: hamster, name: Hamster, emoji: 🐹 }
          - { target: irime, name: iRime, emoji: ℹ️ }
    name: Build Package for ${{ matrix.name }} ${{ matrix.emoji }}
    runs-on: ubuntu-latest
    needs: prepare-schemas
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Cache Schemas 💾
        id: cache-schemas
        uses: actions/cache/restore@v3
        with:
          path: schemas
          key: ${{ runner.os }}-schemas

      - name: Check Schema Cache ✔️
        if: steps.cache-schemas.outputs.cache-hit != 'true'
        uses: actions/github-script@v6
        with:
          script: core.setFailed('Cached schemas not found!')

      - name: Prepare User Settings for Weasel 🦡
        if: ${{ matrix.target == 'weasel' }}
        run: |
          cp -r schemas/* ${{ matrix.target }}/ && \
          cp lua/* ${{ matrix.target }}/lua/ && \
          echo "prepare for ${{ matrix.target }} done."

      - name: Prepare User Settings for Hamster 🐹
        if: ${{ matrix.target == 'hamster' }}
        run: |
          mkdir -p ${{ matrix.target }}/lua ${{ matrix.target }}/opencc && \
          cp schemas/japanese.* schemas/shupin* schemas/jiandao.* ${{ matrix.target }}/ && \
          cp schemas/lua/* lua/* ${{ matrix.target }}/lua/ && \
          cp schemas/opencc/emoji* ${{ matrix.target }}/opencc/ && \
          echo "prepare for ${{ matrix.target }} done."

      - name: Prepare User Settings for iRime ℹ️
        if: ${{ matrix.target == 'irime' }}
        run: |
          mkdir -p ${{ matrix.target }}/lua ${{ matrix.target }}/opencc && \
          cp schemas/japanese.* schemas/shupin* schemas/jiandao.* ${{ matrix.target }}/ && \
          cp schemas/lua/* lua/* ${{ matrix.target }}/lua/ && \
          cp schemas/opencc/emoji* ${{ matrix.target }}/opencc/ && \
          echo "prepare for ${{ matrix.target }} done."

      - name: Make Zip Archive 🗄️
        run: |
          cd ${{ matrix.target }}
          zip -r -q ../${{ matrix.target }}.zip *

      - name: Upload Artifact 📤
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}.zip
          path: ${{ matrix.target }}.zip

  create-release:
    strategy:
      matrix:
        target: [ weasel, hamster, irime ]
        include:
          - { target: weasel, name: Weasel, emoji: 🦡 }
          - { target: hamster, name: Hamster, emoji: 🐹 }
          - { target: irime, name: iRime, emoji: ℹ️ }
    name: Create Release for ${{ matrix.name }} ${{ matrix.emoji }}
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build-package
    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Download Artifacts for ${{ matrix.name }} ${{ matrix.emoji }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.target }}.zip

      - name: Rename Release Zip Archives 🗃️
        run: mv ${{ matrix.target }}.zip ${{ matrix.target }}-${{ github.ref_name }}.zip

      - name: Create Release and Upload Assets 🚀
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ matrix.target }}-${{ github.ref_name }}.zip
